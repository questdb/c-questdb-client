trigger: none

variables:
  OS_MAPPING: none
  Windows_NT-X86: windows
  Darwin-X64: osx
  Darwin-ARM: armosx
  Linux-ARM: armlinux
  Linux-X64: linux

stages:
  - stage: BuildAndTest
    displayName: "Building and testing"
    jobs:
      - job: RunOn
        displayName: "on"
        strategy:
          matrix:
            linux:
              imageName: "ubuntu-latest"
              poolName: "Azure Pipelines"
              BUILD_WITH_MINGW: "0"
            linux-stable:
              imageName: "ubuntu-latest"
              poolName: "Azure Pipelines"
              BUILD_WITH_MINGW: "0"
              toolchain: "stable"
            linux-beta:
              imageName: "ubuntu-latest"
              poolName: "Azure Pipelines"
              BUILD_WITH_MINGW: "0"
              toolchain: "beta"
            linux-nightly:
              imageName: "ubuntu-latest"
              poolName: "Azure Pipelines"
              BUILD_WITH_MINGW: "0"
              toolchain: "nightly"
            mac:
              imageName: "macos-latest"
              poolName: "Azure Pipelines"
              BUILD_WITH_MINGW: "0"
            windows-msvc-2022:
              imageName: "windows-2022"
              poolName: "Azure Pipelines"
              BUILD_WITH_MINGW: "0"
            windows-msvc-2019:
              imageName: "windows-2019"
              poolName: "Azure Pipelines"
              BUILD_WITH_MINGW: "0"
            # windows-mingw:
            #   imageName: "windows-2022"
            #   poolName: "Azure Pipelines"
            #   BUILD_WITH_MINGW: "1"
        pool:
          name: $(poolName)
          vmImage: $(imageName)
        timeoutInMinutes: 60
        steps:
          - checkout: self
            fetchDepth: 1
            lfs: false
            submodules: false
          - template: compile.yaml
          - script: python3 ci/run_all_tests.py
            env:
              JAVA_HOME: $(JAVA_HOME_11_X64)
            displayName: "Tests"
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: ./build
            displayName: "Publish build directory"
            condition: eq(variables['BUILD_WITH_MINGW'], '1')
      - job: CargoFmtAndClippy
        displayName: "cargo fmt and clippy"
        pool:
          vmImage: 'ubuntu-latest'
        timeoutInMinutes: 10
        steps:
          - checkout: self
          - script: |
              rustup component add clippy
              rustup component add rustfmt
            displayName: "Install clippy and rustfmt"
          - script: |
              cd questdb-rs
              cargo fmt --all -- --check
            displayName: "questdb-rs: fmt"
          - script: |
              cd questdb-rs
              cargo clippy --all-targets --all-features -- -D warnings
            displayName: "questdb-rs: clippy"
          - script: |
              cd questdb-rs-ffi
              cargo fmt --all -- --check
            displayName: "questdb-rs-ffi: fmt"
          - script: |
              cd questdb-rs-ffi
              cargo clippy --all-targets --all-features -- -D warnings
            displayName: "questdb-rs-ffi: clippy"
          - script: |
              cd system_test
              cd tls_proxy
              cargo fmt --all -- --check
            displayName: "tls_proxy: fmt"
          - script: |
              cd system_test
              cd tls_proxy
              cargo clippy --all-targets --all-features -- -D warnings
            displayName: "tls_proxy: clippy"
      - job: TestVsQuestDBMaster
        displayName: "Test against the latest QuestDB 'master' branch"
        pool:
          vmImage: 'ubuntu-latest'
        timeoutInMinutes: 60
        steps:
          - checkout: self
            fetchDepth: 1
            lfs: false
            submodules: false
          - template: compile.yaml
          - script: |
              git clone https://github.com/questdb/questdb.git
          - task: Maven3
            displayName: "Compile QuestDB"
            inputs:
              mavenPOMFile: 'questdb/pom.xml'
              jdkVersionOption: '1.11'
              options: "install -DskipTests -Pbuild-web-console"
